// Read the comments below! I am not 100% sure if they're correct

object A {
    def main(): Unit = {
        println("Hello");
    }
}

class Zookeeper {
      var a:    Animal;
      var m:    Mammal;
      var doge: Dog;

      def test(): Int = {
          println(   a.foo(doge, doge, doge)             );
          println(   a.foo(m, m, doge)                   );
          println(   a.foo(a, m, doge)                   );
          println(   m.mammalGeneral(a)                  );
          println(   m.mammalGeneral(m)                  );
          println(   m.mammalGeneral(doge)               );
          println(   m.mammalSpecific(m)                 );
          println(   m.mammalSpecific(doge)              );
          println(   doge.dogMethod(a)                   );
          println(   doge.dogMethod(m)                   );
          println(   doge.dogMethod(doge)                );
          println(   doge.dogMethodSpecific(m)           );
          println(   doge.dogMethodSpecific(doge)        );
          println(   doge.dogMethodMoreSpecific(doge)    );
          
          return 1;
      }

}


class Animal {
    def foo(anything: Animal, something: Mammal, specific: Dog): String = {
        return "Hello";
    }
}

class Mammal extends Animal {
   // Should receive any Mammal, Dog or Animal
   def mammalGeneral(anything: Animal): String = {
       return "Hello Mammal";
   }

   // Should receive any Mammal or Dog
   def mammalSpecific(notAnything: Mammal): String = {
       return "Hello Mammal2";
   }

}

class Dog extends Mammal {
   // Should receive any Mammal, Dog or Animal
   def dogMethod(anything: Animal): String = {
       return "Hello Dog";
   }

   def dogMethodSpecific(anything: Mammal): String = {
       return "Hello Dog2";
   }

   def dogMethodMoreSpecific(anything: Dog): String = {
       return "Hello Dog3";
   }
}
